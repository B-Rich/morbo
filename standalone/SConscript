# -*- Mode: Python -*-

Import('freestanding_env')

fenv = freestanding_env.Clone()

fenv['CPPPATH'] = ["#include", "include/"]
fenv['LINKFLAGS'] += " -T standalone/morbo.ld" 
fenv['LIBPATH'] = ['.']

stand = fenv.StaticLibrary('stand',
                           [ 'elf.c',
                             'hexdump.c',
                             'mbi.c',
                             'pci.c',
                             'pci_db.c',
                             'printf.c',
                             'realmode.asm',
                             'reboot.c',
                             'serial.c',
                             'start.asm',
                             'util.c',
                             'version.c',

                             # FreeBSD libc stuff
                             'strncmp.c',
                             'strncpy.c',
                             'strtok.c',
                             'strtoull.c',
                             'qdivrem.c',
                             ])

AlwaysBuild(Command('version.inc', [], """git describe | sed 's/^\\(.*\\)$/"\\1"/' > $TARGET"""))

# Morbo

morbo = fenv.Program('morbo.debug',
                     [ 'crc16.c',
                       'morbo.c',
                       'ohci.c' ],
                     LIBS=['stand'])
Depends(morbo, 'morbo.ld')
morbo = Command('morbo', morbo, 'strip -o $TARGET $SOURCE')


# Zapp

zapp = fenv.Program('zapp.debug',
                    [ 'acpi.c',
                      'zapp.c',
                      ],
                    LIBS=['stand'])
Depends(zapp, 'morbo.ld')
zapp = Command('zapp', zapp, 'strip -o $TARGET $SOURCE')

# VILO

vilo = fenv.Program('vilo.debug',
                    [ 'vilo.c' ],
                    LIBS=['stand'])
Depends(vilo, 'morbo.ld')
vilo = Command('vilo', vilo, 'strip -o $TARGET $SOURCE')

# Bender

bender = fenv.Program('bender.debug',
                      [ 'bender.c',
                        ],
                      LIBS=['stand'])
Depends(bender, 'morbo.ld')
bender = Command('bender', bender, 'strip -o $TARGET $SOURCE')

# Installation

Install('#tftp', [ morbo,
                   zapp,
                   vilo,
                   bender,
                   ])

# Incomplete version of Option ROM

rom_env = freestanding_env.Clone()

rom_env['CPPPATH'] = ["#include", "include/"]
rom_env['CFLAGS'] += "-fomit-frame-pointer -Os"
rom_env['LINKFLAGS'] += " -T standalone/option-rom.ld" 

rom = rom_env.Program('option-rom.bin-unfixed',
                      ['option-rom.asm',
                       'or-main.c'])

rom_fixed = fenv.Command('option-rom.bin', ['rom_fixup.py', rom],
                         "${SOURCES[0]} ${SOURCES[1:]} $TARGET")

# EOF
